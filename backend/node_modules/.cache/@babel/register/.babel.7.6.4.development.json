{
  "{\"sourceRoot\":\"/Users/Victor/Documents/NTNU/H2019/Webutvikling/prosjekt_3/backend\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Victor/Documents/NTNU/H2019/Webutvikling/prosjekt_3/backend\",\"filename\":\"/Users/Victor/Documents/NTNU/H2019/Webutvikling/prosjekt_3/backend/server.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/Victor/Documents/NTNU/H2019/Webutvikling/prosjekt_3/backend\",\"plugins\":[{\"key\":\"module-resolver\",\"visitor\":{\"Program\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"root\":[\"./src\"]}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"corejs2-usage\",\"visitor\":{\"ImportDeclaration\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"YieldExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"VariableDeclarator\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"corejs\":{\"options\":{\"loose\":false,\"includePrerelease\":false},\"loose\":false,\"raw\":\"2.0.0\",\"major\":2,\"minor\":0,\"patch\":0,\"prerelease\":[],\"build\":[],\"version\":\"2.0.0\"},\"polyfillTargets\":{\"node\":\"10.15.3\"},\"include\":{},\"exclude\":{},\"proposals\":false,\"shippedProposals\":false,\"regenerator\":false,\"debug\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Victor/Documents/NTNU/H2019/Webutvikling/prosjekt_3/backend",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Victor/Documents/NTNU/H2019/Webutvikling/prosjekt_3/backend",
      "filename": "/Users/Victor/Documents/NTNU/H2019/Webutvikling/prosjekt_3/backend/server.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/Victor/Documents/NTNU/H2019/Webutvikling/prosjekt_3/backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "module-resolver",
          "visitor": {
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "root": [
              "./src"
            ]
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "corejs2-usage",
          "visitor": {
            "ImportDeclaration": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "YieldExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "corejs": {
              "options": {
                "loose": false,
                "includePrerelease": false
              },
              "loose": false,
              "raw": "2.0.0",
              "major": 2,
              "minor": 0,
              "patch": 0,
              "prerelease": [],
              "build": [],
              "version": "2.0.0"
            },
            "polyfillTargets": {
              "node": "10.15.3"
            },
            "include": {},
            "exclude": {},
            "proposals": false,
            "shippedProposals": false,
            "regenerator": false,
            "debug": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Victor/Documents/NTNU/H2019/Webutvikling/prosjekt_3/backend/server.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/Victor/Documents/NTNU/H2019/Webutvikling/prosjekt_3/backend/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Victor/Documents/NTNU/H2019/Webutvikling/prosjekt_3/backend",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar _data = _interopRequireDefault(require(\"data\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Babel er brukt og lagt til som en dependency slik at vi kan importere med vanlig .js syntaks i stedet for require()\nconst API_PORT = 3001;\nconst app = (0, _express.default)();\n\nconst router = _express.default.Router();\n\napp.use(_bodyParser.default.json());\napp.use((0, _cors.default)());\napp.listen(API_PORT, () => console.log(`LISTENING ON PORT ${API_PORT}`));\nconst dbRoute = 'mongodb://admin:admin@it2810-39.idi.ntnu.no:27017/admin';\n\n_mongoose.default.connect(dbRoute, {\n  useNewUrlParser: true\n});\n\nconst connection = _mongoose.default.connection;\nconnection.once('open', function () {\n  console.log(\"MongoDB database connection established successfully\");\n}); // let db = mongoose.connection;\n// db.once('open', () => console.log('connected to the database'));\n// db.on('error', console.error.bind(console, 'MongoDB connection error:'));\n// router.get('/getData', (req, res) => {\n//     Data.find((err, data) => {\n//       if (err) return res.json({ success: false, error: err });\n//       return res.json({ success: true, data: data });\n//     });\n//   });\n// router.post('/updateData', (req, res) => {\n//     const { id, update } = req.body;\n//     Data.findByIdAndUpdate(id, update, (err) => {\n//       if (err) return res.json({ success: false, error: err });\n//       return res.json({ success: true });\n//     });\n//   });\n// router.delete('/deleteData', (req, res) => {\n//     const { id } = req.body;\n//     Data.findByIdAndRemove(id, (err) => {\n//       if (err) return res.send(err);\n//       return res.json({ success: true });\n//     });\n//   });\n// router.post('/putData', (req, res) => {\n//     let data = new Data();\n//     const { id, message } = req.body;\n//     if ((!id && id !== 0) || !message) {\n//       return res.json({\n//         success: false,\n//         error: 'INVALID INPUTS',\n//       });\n//     }\n//     data.message = message;\n//     data.id = id;\n//     data.save((err) => {\n//       if (err) return res.json({ success: false, error: err });\n//       return res.json({ success: true });\n//     });\n//   });\n// app.use('/api', router);\n\napp.use((req, res, next) => {\n  console.log('Time: %d', Date.now());\n  next();\n}); // fetch('https://grades.no/api/courses/tdt4145/grades')\n//     .then(res => res.json())\n//     .then(res => console.log(res))\n\napp.use(\"/test\", (req, res) => {\n  console.log(req.body);\n  res.status(200).json(\"Dette er en  respons\").send();\n});\napp.use(\"/grades/courses\", (req, res) => {\n  console.log(req.body);\n  res.status(200).json(\"Grades er bestått\").send();\n}); //  URL: https://grades.no/api/courses/tdt4145/grades\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJBUElfUE9SVCIsImFwcCIsInJvdXRlciIsImV4cHJlc3MiLCJSb3V0ZXIiLCJ1c2UiLCJib2R5UGFyc2VyIiwianNvbiIsImxpc3RlbiIsImNvbnNvbGUiLCJsb2ciLCJkYlJvdXRlIiwibW9uZ29vc2UiLCJjb25uZWN0IiwidXNlTmV3VXJsUGFyc2VyIiwiY29ubmVjdGlvbiIsIm9uY2UiLCJyZXEiLCJyZXMiLCJuZXh0IiwiRGF0ZSIsIm5vdyIsImJvZHkiLCJzdGF0dXMiLCJzZW5kIl0sIm1hcHBpbmdzIjoiOztBQUFBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOzs7O0FBQ0E7QUFFQSxNQUFNQSxRQUFRLEdBQUcsSUFBakI7QUFDQSxNQUFNQyxHQUFHLEdBQUcsdUJBQVo7O0FBQ0EsTUFBTUMsTUFBTSxHQUFHQyxpQkFBUUMsTUFBUixFQUFmOztBQUVBSCxHQUFHLENBQUNJLEdBQUosQ0FBUUMsb0JBQVdDLElBQVgsRUFBUjtBQUNBTixHQUFHLENBQUNJLEdBQUosQ0FBUSxvQkFBUjtBQUVBSixHQUFHLENBQUNPLE1BQUosQ0FBV1IsUUFBWCxFQUFxQixNQUFNUyxPQUFPLENBQUNDLEdBQVIsQ0FBYSxxQkFBb0JWLFFBQVMsRUFBMUMsQ0FBM0I7QUFHQSxNQUFNVyxPQUFPLEdBQ1gseURBREY7O0FBR0FDLGtCQUFTQyxPQUFULENBQWlCRixPQUFqQixFQUEwQjtBQUFFRyxFQUFBQSxlQUFlLEVBQUU7QUFBbkIsQ0FBMUI7O0FBQ0EsTUFBTUMsVUFBVSxHQUFHSCxrQkFBU0csVUFBNUI7QUFFQUEsVUFBVSxDQUFDQyxJQUFYLENBQWdCLE1BQWhCLEVBQXdCLFlBQVc7QUFDL0JQLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLHNEQUFaO0FBQ0gsQ0FGRCxFLENBTUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFFQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7O0FBR0FULEdBQUcsQ0FBQ0ksR0FBSixDQUFRLENBQUNZLEdBQUQsRUFBTUMsR0FBTixFQUFXQyxJQUFYLEtBQW9CO0FBQ3hCVixFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxVQUFaLEVBQXdCVSxJQUFJLENBQUNDLEdBQUwsRUFBeEI7QUFDQUYsRUFBQUEsSUFBSTtBQUNMLENBSEgsRSxDQUtBO0FBQ0E7QUFDQTs7QUFDQWxCLEdBQUcsQ0FBQ0ksR0FBSixDQUFRLE9BQVIsRUFBaUIsQ0FBQ1ksR0FBRCxFQUFNQyxHQUFOLEtBQWM7QUFDM0JULEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZTyxHQUFHLENBQUNLLElBQWhCO0FBQ0FKLEVBQUFBLEdBQUcsQ0FBQ0ssTUFBSixDQUFXLEdBQVgsRUFBaUJoQixJQUFqQixDQUFzQixzQkFBdEIsRUFBOENpQixJQUE5QztBQUNILENBSEQ7QUFRQXZCLEdBQUcsQ0FBQ0ksR0FBSixDQUFRLGlCQUFSLEVBQTJCLENBQUNZLEdBQUQsRUFBTUMsR0FBTixLQUFjO0FBQ3JDVCxFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWU8sR0FBRyxDQUFDSyxJQUFoQjtBQUNBSixFQUFBQSxHQUFHLENBQUNLLE1BQUosQ0FBVyxHQUFYLEVBQWdCaEIsSUFBaEIsQ0FBcUIsbUJBQXJCLEVBQTBDaUIsSUFBMUM7QUFDSCxDQUhELEUsQ0FLQSIsInNvdXJjZVJvb3QiOiIvVXNlcnMvVmljdG9yL0RvY3VtZW50cy9OVE5VL0gyMDE5L1dlYnV0dmlrbGluZy9wcm9zamVrdF8zL2JhY2tlbmQiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZXhwcmVzcyBmcm9tICdleHByZXNzJ1xuaW1wb3J0IG1vbmdvb3NlIGZyb20gJ21vbmdvb3NlJ1xuaW1wb3J0IGJvZHlQYXJzZXIgZnJvbSAnYm9keS1wYXJzZXInO1xuaW1wb3J0IHBhdGggZnJvbSAncGF0aCc7XG5pbXBvcnQgY29ycyBmcm9tICdjb3JzJztcbmltcG9ydCBEYXRhIGZyb20gJ2RhdGEnXG4vLyBCYWJlbCBlciBicnVrdCBvZyBsYWd0IHRpbCBzb20gZW4gZGVwZW5kZW5jeSBzbGlrIGF0IHZpIGthbiBpbXBvcnRlcmUgbWVkIHZhbmxpZyAuanMgc3ludGFrcyBpIHN0ZWRldCBmb3IgcmVxdWlyZSgpXG5cbmNvbnN0IEFQSV9QT1JUID0gMzAwMTtcbmNvbnN0IGFwcCA9IGV4cHJlc3MoKTtcbmNvbnN0IHJvdXRlciA9IGV4cHJlc3MuUm91dGVyKCk7XG5cbmFwcC51c2UoYm9keVBhcnNlci5qc29uKCkpO1xuYXBwLnVzZShjb3JzKCkpO1xuXG5hcHAubGlzdGVuKEFQSV9QT1JULCAoKSA9PiBjb25zb2xlLmxvZyhgTElTVEVOSU5HIE9OIFBPUlQgJHtBUElfUE9SVH1gKSk7XG5cblxuY29uc3QgZGJSb3V0ZSA9XG4gICdtb25nb2RiOi8vYWRtaW46YWRtaW5AaXQyODEwLTM5LmlkaS5udG51Lm5vOjI3MDE3L2FkbWluJztcblxubW9uZ29vc2UuY29ubmVjdChkYlJvdXRlLCB7IHVzZU5ld1VybFBhcnNlcjogdHJ1ZSB9KTtcbmNvbnN0IGNvbm5lY3Rpb24gPSBtb25nb29zZS5jb25uZWN0aW9uO1xuXG5jb25uZWN0aW9uLm9uY2UoJ29wZW4nLCBmdW5jdGlvbigpIHtcbiAgICBjb25zb2xlLmxvZyhcIk1vbmdvREIgZGF0YWJhc2UgY29ubmVjdGlvbiBlc3RhYmxpc2hlZCBzdWNjZXNzZnVsbHlcIik7XG59KVxuXG5cblxuLy8gbGV0IGRiID0gbW9uZ29vc2UuY29ubmVjdGlvbjtcbi8vIGRiLm9uY2UoJ29wZW4nLCAoKSA9PiBjb25zb2xlLmxvZygnY29ubmVjdGVkIHRvIHRoZSBkYXRhYmFzZScpKTtcbi8vIGRiLm9uKCdlcnJvcicsIGNvbnNvbGUuZXJyb3IuYmluZChjb25zb2xlLCAnTW9uZ29EQiBjb25uZWN0aW9uIGVycm9yOicpKTtcblxuLy8gcm91dGVyLmdldCgnL2dldERhdGEnLCAocmVxLCByZXMpID0+IHtcbi8vICAgICBEYXRhLmZpbmQoKGVyciwgZGF0YSkgPT4ge1xuLy8gICAgICAgaWYgKGVycikgcmV0dXJuIHJlcy5qc29uKHsgc3VjY2VzczogZmFsc2UsIGVycm9yOiBlcnIgfSk7XG4vLyAgICAgICByZXR1cm4gcmVzLmpzb24oeyBzdWNjZXNzOiB0cnVlLCBkYXRhOiBkYXRhIH0pO1xuLy8gICAgIH0pO1xuLy8gICB9KTtcblxuLy8gcm91dGVyLnBvc3QoJy91cGRhdGVEYXRhJywgKHJlcSwgcmVzKSA9PiB7XG4vLyAgICAgY29uc3QgeyBpZCwgdXBkYXRlIH0gPSByZXEuYm9keTtcbi8vICAgICBEYXRhLmZpbmRCeUlkQW5kVXBkYXRlKGlkLCB1cGRhdGUsIChlcnIpID0+IHtcbi8vICAgICAgIGlmIChlcnIpIHJldHVybiByZXMuanNvbih7IHN1Y2Nlc3M6IGZhbHNlLCBlcnJvcjogZXJyIH0pO1xuLy8gICAgICAgcmV0dXJuIHJlcy5qc29uKHsgc3VjY2VzczogdHJ1ZSB9KTtcbi8vICAgICB9KTtcbi8vICAgfSk7XG5cbi8vIHJvdXRlci5kZWxldGUoJy9kZWxldGVEYXRhJywgKHJlcSwgcmVzKSA9PiB7XG4vLyAgICAgY29uc3QgeyBpZCB9ID0gcmVxLmJvZHk7XG4vLyAgICAgRGF0YS5maW5kQnlJZEFuZFJlbW92ZShpZCwgKGVycikgPT4ge1xuLy8gICAgICAgaWYgKGVycikgcmV0dXJuIHJlcy5zZW5kKGVycik7XG4vLyAgICAgICByZXR1cm4gcmVzLmpzb24oeyBzdWNjZXNzOiB0cnVlIH0pO1xuLy8gICAgIH0pO1xuLy8gICB9KTtcblxuLy8gcm91dGVyLnBvc3QoJy9wdXREYXRhJywgKHJlcSwgcmVzKSA9PiB7XG4vLyAgICAgbGV0IGRhdGEgPSBuZXcgRGF0YSgpO1xuICBcbi8vICAgICBjb25zdCB7IGlkLCBtZXNzYWdlIH0gPSByZXEuYm9keTtcbiAgXG4vLyAgICAgaWYgKCghaWQgJiYgaWQgIT09IDApIHx8ICFtZXNzYWdlKSB7XG4vLyAgICAgICByZXR1cm4gcmVzLmpzb24oe1xuLy8gICAgICAgICBzdWNjZXNzOiBmYWxzZSxcbi8vICAgICAgICAgZXJyb3I6ICdJTlZBTElEIElOUFVUUycsXG4vLyAgICAgICB9KTtcbi8vICAgICB9XG4vLyAgICAgZGF0YS5tZXNzYWdlID0gbWVzc2FnZTtcbi8vICAgICBkYXRhLmlkID0gaWQ7XG4vLyAgICAgZGF0YS5zYXZlKChlcnIpID0+IHtcbi8vICAgICAgIGlmIChlcnIpIHJldHVybiByZXMuanNvbih7IHN1Y2Nlc3M6IGZhbHNlLCBlcnJvcjogZXJyIH0pO1xuLy8gICAgICAgcmV0dXJuIHJlcy5qc29uKHsgc3VjY2VzczogdHJ1ZSB9KTtcbi8vICAgICB9KTtcbi8vICAgfSk7XG5cbi8vIGFwcC51c2UoJy9hcGknLCByb3V0ZXIpO1xuXG5cbmFwcC51c2UoKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gICAgY29uc29sZS5sb2coJ1RpbWU6ICVkJywgRGF0ZS5ub3coKSlcbiAgICBuZXh0KClcbiAgfSlcblxuLy8gZmV0Y2goJ2h0dHBzOi8vZ3JhZGVzLm5vL2FwaS9jb3Vyc2VzL3RkdDQxNDUvZ3JhZGVzJylcbi8vICAgICAudGhlbihyZXMgPT4gcmVzLmpzb24oKSlcbi8vICAgICAudGhlbihyZXMgPT4gY29uc29sZS5sb2cocmVzKSlcbmFwcC51c2UoXCIvdGVzdFwiLCAocmVxLCByZXMpID0+IHtcbiAgICBjb25zb2xlLmxvZyhyZXEuYm9keSk7XG4gICAgcmVzLnN0YXR1cygyMDApIC5qc29uKFwiRGV0dGUgZXIgZW4gIHJlc3BvbnNcIikuc2VuZCgpO1xufSlcblxuXG5cblxuYXBwLnVzZShcIi9ncmFkZXMvY291cnNlc1wiLCAocmVxLCByZXMpID0+IHtcbiAgICBjb25zb2xlLmxvZyhyZXEuYm9keSlcbiAgICByZXMuc3RhdHVzKDIwMCkuanNvbihcIkdyYWRlcyBlciBiZXN0w6V0dFwiKS5zZW5kKCk7XG59KVxuXG4vLyAgVVJMOiBodHRwczovL2dyYWRlcy5uby9hcGkvY291cnNlcy90ZHQ0MTQ1L2dyYWRlcyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "API_PORT",
        "app",
        "router",
        "express",
        "Router",
        "use",
        "bodyParser",
        "json",
        "listen",
        "console",
        "log",
        "dbRoute",
        "mongoose",
        "connect",
        "useNewUrlParser",
        "connection",
        "once",
        "req",
        "res",
        "next",
        "Date",
        "now",
        "body",
        "status",
        "send"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AACA;AAEA,MAAMA,QAAQ,GAAG,IAAjB;AACA,MAAMC,GAAG,GAAG,uBAAZ;;AACA,MAAMC,MAAM,GAAGC,iBAAQC,MAAR,EAAf;;AAEAH,GAAG,CAACI,GAAJ,CAAQC,oBAAWC,IAAX,EAAR;AACAN,GAAG,CAACI,GAAJ,CAAQ,oBAAR;AAEAJ,GAAG,CAACO,MAAJ,CAAWR,QAAX,EAAqB,MAAMS,OAAO,CAACC,GAAR,CAAa,qBAAoBV,QAAS,EAA1C,CAA3B;AAGA,MAAMW,OAAO,GACX,yDADF;;AAGAC,kBAASC,OAAT,CAAiBF,OAAjB,EAA0B;AAAEG,EAAAA,eAAe,EAAE;AAAnB,CAA1B;;AACA,MAAMC,UAAU,GAAGH,kBAASG,UAA5B;AAEAA,UAAU,CAACC,IAAX,CAAgB,MAAhB,EAAwB,YAAW;AAC/BP,EAAAA,OAAO,CAACC,GAAR,CAAY,sDAAZ;AACH,CAFD,E,CAMA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAGAT,GAAG,CAACI,GAAJ,CAAQ,CAACY,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AACxBV,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBU,IAAI,CAACC,GAAL,EAAxB;AACAF,EAAAA,IAAI;AACL,CAHH,E,CAKA;AACA;AACA;;AACAlB,GAAG,CAACI,GAAJ,CAAQ,OAAR,EAAiB,CAACY,GAAD,EAAMC,GAAN,KAAc;AAC3BT,EAAAA,OAAO,CAACC,GAAR,CAAYO,GAAG,CAACK,IAAhB;AACAJ,EAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAiBhB,IAAjB,CAAsB,sBAAtB,EAA8CiB,IAA9C;AACH,CAHD;AAQAvB,GAAG,CAACI,GAAJ,CAAQ,iBAAR,EAA2B,CAACY,GAAD,EAAMC,GAAN,KAAc;AACrCT,EAAAA,OAAO,CAACC,GAAR,CAAYO,GAAG,CAACK,IAAhB;AACAJ,EAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBhB,IAAhB,CAAqB,mBAArB,EAA0CiB,IAA1C;AACH,CAHD,E,CAKA",
      "sourceRoot": "/Users/Victor/Documents/NTNU/H2019/Webutvikling/prosjekt_3/backend",
      "sourcesContent": [
        "import express from 'express'\nimport mongoose from 'mongoose'\nimport bodyParser from 'body-parser';\nimport path from 'path';\nimport cors from 'cors';\nimport Data from 'data'\n// Babel er brukt og lagt til som en dependency slik at vi kan importere med vanlig .js syntaks i stedet for require()\n\nconst API_PORT = 3001;\nconst app = express();\nconst router = express.Router();\n\napp.use(bodyParser.json());\napp.use(cors());\n\napp.listen(API_PORT, () => console.log(`LISTENING ON PORT ${API_PORT}`));\n\n\nconst dbRoute =\n  'mongodb://admin:admin@it2810-39.idi.ntnu.no:27017/admin';\n\nmongoose.connect(dbRoute, { useNewUrlParser: true });\nconst connection = mongoose.connection;\n\nconnection.once('open', function() {\n    console.log(\"MongoDB database connection established successfully\");\n})\n\n\n\n// let db = mongoose.connection;\n// db.once('open', () => console.log('connected to the database'));\n// db.on('error', console.error.bind(console, 'MongoDB connection error:'));\n\n// router.get('/getData', (req, res) => {\n//     Data.find((err, data) => {\n//       if (err) return res.json({ success: false, error: err });\n//       return res.json({ success: true, data: data });\n//     });\n//   });\n\n// router.post('/updateData', (req, res) => {\n//     const { id, update } = req.body;\n//     Data.findByIdAndUpdate(id, update, (err) => {\n//       if (err) return res.json({ success: false, error: err });\n//       return res.json({ success: true });\n//     });\n//   });\n\n// router.delete('/deleteData', (req, res) => {\n//     const { id } = req.body;\n//     Data.findByIdAndRemove(id, (err) => {\n//       if (err) return res.send(err);\n//       return res.json({ success: true });\n//     });\n//   });\n\n// router.post('/putData', (req, res) => {\n//     let data = new Data();\n  \n//     const { id, message } = req.body;\n  \n//     if ((!id && id !== 0) || !message) {\n//       return res.json({\n//         success: false,\n//         error: 'INVALID INPUTS',\n//       });\n//     }\n//     data.message = message;\n//     data.id = id;\n//     data.save((err) => {\n//       if (err) return res.json({ success: false, error: err });\n//       return res.json({ success: true });\n//     });\n//   });\n\n// app.use('/api', router);\n\n\napp.use((req, res, next) => {\n    console.log('Time: %d', Date.now())\n    next()\n  })\n\n// fetch('https://grades.no/api/courses/tdt4145/grades')\n//     .then(res => res.json())\n//     .then(res => console.log(res))\napp.use(\"/test\", (req, res) => {\n    console.log(req.body);\n    res.status(200) .json(\"Dette er en  respons\").send();\n})\n\n\n\n\napp.use(\"/grades/courses\", (req, res) => {\n    console.log(req.body)\n    res.status(200).json(\"Grades er bestått\").send();\n})\n\n//  URL: https://grades.no/api/courses/tdt4145/grades"
      ]
    },
    "sourceType": "script",
    "mtime": 1571246954053
  }
}